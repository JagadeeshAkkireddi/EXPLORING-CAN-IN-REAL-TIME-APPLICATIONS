#include "delay.h"^M
#include "types.h"^M
#include "can_defines.h"^M
#include "can_definition.h"^M
#include "can.h"^M
#include "lcd_defines.h"^M
#include "interrupts.h"^M
#include "pin_function_defines.h"^M
^M
#define LED 14^M
^M
u32 count,R,i;^M
static u32 flag1=0,flag2=0;^M
^M
int main()^M
{^M
        SETBIT(IODIR0,LED);^M
    init_can1();^M
    txframe.ID=1;^M
    txframe.vbf.RTR=0;^M
    txframe.vbf.DLC=4;^M
    init_lcd();^M
    Enable_EINT1();^M
    Enable_EINT2();^M
    init_adc();^M
    while(1)^M
    {^M
        if(flag1==1)^M
        {^M
            count++;^M
            flag1=0;^M
            transmit();^M
        }^M
        if(flag2==1)^M
        {^M
            count--;^M
            flag2=0;^M
            transmit();^M
        }^M
        temp();^M
        can_rx(&rxframe);^M
        r=rxframe.Data1;^M
        if(rxframe.ID==2)^M
        {^M
            if(r==0)^M
            {^M
                WRITEBIT(IOPIN0,LED,R);^M
            }^M
        }^M
    }^M
}^M
^M
void temp(void)^M
{^M
    u8 x;^M
    f32 aR1;^M
    x=0xdf;^M
    aR1=((((Read_ADC(CH0))*3.3)/1023)*100);^M
    strlcd("temp: ");^M
    f32lcd(aR1,2);^M
    charlcd(x);^M
    charlcd('c');^M
    delay_ms(1000);^M
    cmdlcd(CLEAR_LCD);^M
}^M
^M
void transmit(void)^M
{^M
    txFrame.ID=2;^M
    txFrame.vbf.RTR=0;   ^M

        txFrame.Data1=count;^M
    ^M
    for(i=0;i<=4;i++)    ^M

                {    ^M

            txFrame.vbf.DLC=i;    ^M

                CAN1_Tx(txFrame);    ^M

                }       ^M
}^M
^M
void receive(void)^M
{^M
    struct CAN_Frame rxFrame;^M
    SETBIT(IODIR0,18);^M
    if(R==1)^M
    {^M
        SETBIT(IOSET0,18);^M
    } ^M
}^M                                    